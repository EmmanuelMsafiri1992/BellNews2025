name: Build and Push Multi-Architecture Docker Images

on:
  push:
    branches: [ main, develop ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  workflow_dispatch:
    inputs:
      push_images:
        description: 'Push images to Docker Hub'
        required: false
        default: 'true'
        type: boolean

env:
  REGISTRY: docker.io
  IMAGE_PREFIX: ${{ secrets.DOCKER_HUB_USERNAME || github.repository_owner }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - name: newsapp
            context: ./newsapp
            dockerfile: ./newsapp/Dockerfile.multi-arch
          - name: bellapp
            context: ./bellapp
            dockerfile: ./bellapp/Dockerfile.multi-arch
          - name: config-service
            context: .
            dockerfile: ./Dockerfile_config.multi-arch
          - name: time-fix
            context: .
            dockerfile: ./Dockerfile.timefix
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        platforms: linux/amd64,linux/arm64

    - name: Login to Docker Hub
      if: github.event_name != 'pull_request' && (github.event.inputs.push_images == 'true' || github.event.inputs.push_images == null)
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/bellnews-${{ matrix.service.name }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix=commit-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ${{ matrix.service.context }}
        file: ${{ matrix.service.dockerfile }}
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' && (github.event.inputs.push_images == 'true' || github.event.inputs.push_images == null) }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          BUILDKIT_INLINE_CACHE=1

    - name: Update Docker Hub description
      if: github.event_name != 'pull_request' && matrix.service.name == 'newsapp' && (github.event.inputs.push_images == 'true' || github.event.inputs.push_images == null)
      uses: peter-evans/dockerhub-description@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
        repository: ${{ env.IMAGE_PREFIX }}/bellnews-${{ matrix.service.name }}
        readme-filepath: ./README_DOCKER.md

  deploy-notification:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' && (github.event.inputs.push_images == 'true' || github.event.inputs.push_images == null)
    
    steps:
    - name: Notify deployment ready
      run: |
        echo "ðŸŽ‰ Multi-architecture images built and pushed successfully!"
        echo "ðŸ“‹ Available images:"
        echo "   - ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/bellnews-newsapp:latest"
        echo "   - ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/bellnews-bellapp:latest"
        echo "   - ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/bellnews-config-service:latest"
        echo "   - ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/bellnews-time-fix:latest"
        echo ""
        echo "ðŸš€ Ready for Nano Pi deployment!"
        echo "   Run: docker-compose -f docker-compose.nanopi.yml pull && docker-compose -f docker-compose.nanopi.yml up -d"