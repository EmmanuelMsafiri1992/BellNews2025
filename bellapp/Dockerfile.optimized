# Multi-stage build optimized for ARM64/Nano Pi
# Stage 1: Build stage
FROM --platform=linux/arm64 python:3.12-slim-bookworm as builder

WORKDIR /build

# Install build dependencies in one layer
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc g++ python3-dev build-essential libc6-dev make \
    libasound2-dev portaudio19-dev libsndfile1 pkg-config libffi-dev \
    && rm -rf /var/lib/apt/lists/* /var/cache/apt/*

# Create virtual environment and install dependencies
COPY requirements.txt .
RUN python3 -m venv /venv \
    && /venv/bin/pip install --upgrade pip setuptools wheel \
    && /venv/bin/pip install --no-cache-dir -r requirements.txt

# Stage 2: Runtime stage (minimal)
FROM --platform=linux/arm64 python:3.12-slim-bookworm as runtime

WORKDIR /bellapp

# Install only runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    libasound2 alsa-utils libsndfile1 \
    && rm -rf /var/lib/apt/lists/* /var/cache/apt/* /tmp/*

# Copy virtual environment from builder
COPY --from=builder /venv /venv

# Copy application code
COPY . .

# Create logs directory
RUN mkdir -p logs

EXPOSE 5000 5001
ENV PYTHONUNBUFFERED=1
ENV IN_DOCKER=1
ENV PATH="/venv/bin:$PATH"

CMD ["python3", "launch_vcns_timer.py"]